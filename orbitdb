#!/bin/node

const av            = process.argv;
const folderPath    = arguments[1].main.path;
const thisFile      = arguments[1].main.filename;

function InvalidCommand(cmd) {
    console.error(`${cmd}: \x1B[31mNot recognise as a command.\x1B[m`);
}

function Main(av) {
    if (av.length == 0 || av[0] == '--help' || av[0] == '-h') {
        return DisplayUsage();
    }
    return Cases(av[0]);
}

function DisplayUsage() {
console.log('orbitdb\n');
console.log('[1mUSAGE[m');
console.log('  Test');
console.log('');
console.log('[1mCOMMANDS[m');
console.log('  $ create [database] [type]'+(' '.repeat(12))+'[2m'+'Create a new database. Type can be one of: eventlog|feed|docstore|keyvalue|counter'+'[m');
console.log('  $ test [opiea] [type]'+(' '.repeat(17))+'[2m'+'OIuouazoieuaz'+'[m');
console.log('');
}

function Cases(name) {
switch (name) {
case 'create':
HelloWorld();
break;
case 'test':
HelloWorld();
break;
default:
return InvalidCommand(av[0]);
}
}

function HelloWorld() {
    console.log("Hello world !");
}
function HelloWorld() {
    console.log("Hello world !");
}
av.splice(0, 2); Main(av)
